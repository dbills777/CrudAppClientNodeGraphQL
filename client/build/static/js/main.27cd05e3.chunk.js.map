{"version":3,"sources":["contexts/LoginContext.js","Components/AuthLogoutTest.js","Components/MenuAppBar.js","contexts/CharacterContext.js","Components/Quote.js","contexts/EpisodeContext.js","Components/Episodes.js","Components/Card.js","Components/CardUser.js","Components/ProductList.js","Components/PersonalCard.js","Components/AuthLoginTest.js","Components/LoginFullScreen.js","App.js","index.js"],"names":["LoginContext","createContext","isAuth","email","name","login","setName","setEmail","LoginContextProvider","props","useState","isAuthenticated","setIsAuthenticated","Provider","value","personName","children","useLoginContext","useContext","AuthLogoutTest","logout","useAuth0","to","Button","style","color","backgroundColor","marginRight","variant","onClick","useStyles","makeStyles","theme","appBar","height","grow","flexGrow","menuButton","spacing","title","display","breakpoints","up","search","position","borderRadius","shape","fade","palette","common","white","marginLeft","width","inputInput","padding","paddingLeft","transition","transitions","create","sectionDesktop","sectionMobile","navLinks","textDecoration","fontSize","margin","alignItems","notActive","cursor","PrimarySearchAppBar","getQuery","classes","authContext","user","drawerOpen","setDrawerOpen","handleDrawerToggle","alertMessage","alert","className","AppBar","background","boxShadow","Toolbar","IconButton","edge","aria-label","Drawer","open","onClose","Divider","List","ListItem","textAlign","aria-haspopup","src","picture","alt","CharacterContext","characters","CharacterContextProvider","setCharacters","useEffect","a","axios","get","response","console","log","data","getCharacters","Quote","React","checked","setChecked","quotes","setQuotes","quotechange","SetQuotechange","minWidth","maxWidth","zIndex","backdropFilter","result","fetchItems","getNewQuote","prev","items","map","item","author","image","filter","person","nickname","photo","quote","length","Slide","direction","in","mountOnEnter","unmountOnExit","id","series","quote_id","EpisodeContext","episodes","EpisodeContextProvider","setEpisodes","columns","label","text","align","format","join","root","container","maxHeight","table","scrollbar","header","row","StickyHeadTable","season","number","date","appears","page","setPage","rowsPerPage","setRowsPerPage","titles","episode","rows","Paper","TableContainer","Typography","Table","stickyHeader","TableHead","TableRow","column","TableCell","TableBody","slice","hover","role","tabIndex","episode_id","TablePagination","rowsPerPageOptions","component","count","onChangePage","event","newPage","onChangeRowsPerPage","target","Transition","forwardRef","ref","borderRight","borderBottom","justifyContent","flexWrap","title2","flex","media","paddingTop","clicked","expand","transform","duration","shortest","expandOpen","avatar","form","ListCard","expanded","setExpanded","openDialog","setOpenDialog","openEditDialog","setOpenEditDialog","currentCharacter","setCurrentCharacter","newName","setNewName","newNickName","setNewNickName","searchTerm","setSearchTerm","setOpen","postData","setPostData","url","updateField","e","handleClose","postNewCharacter","post","occupation","status","portrayed","char_id","error","sorted","sort","b","handleClickDeleteOpen","handleClickEditOpen","closeDialog","closeEditDialog","deleteFromDB","delete","productID","_id","editInfoInDB","put","characterID","handleSeach","TextField","placeholder","onChange","Card","CardHeader","action","subheader","CardMedia","CardContent","CardActions","clsx","aria-expanded","Collapse","timeout","paragraph","Dialog","DialogTitle","DialogContentText","DialogActions","aria-labelledby","DialogContent","autoFocus","type","fullWidth","fullScreen","TransitionComponent","button","required","autoComplete","disableSpacing","given_name","family_name","card","content","marginBottom","marginTop","typeWidth","actions","ALL_PRODUCTS","gql","UPDATE_PRODUCT","CREATE_PRODUCT","DELETE_PRODUCT","ProductList","selectedProduct","setSelectedProduct","setTitle","price","setPrice","description","setDescription","category","setCategory","setImage","editOpen","setEditOpen","deleteOpen","setDeleteOpen","useQuery","loading","useMutation","updateProduct","deleteProduct","createProduct","handleDelete","variables","err","handleCloseEdit","handleUpdate","handleAddProduct","handleCloseDelete","Container","messages","message","productList","allProducts","filteredArr","allCategories","reduce","acc","current","find","concat","for","product","gutterBottom","Box","dialog","profile","ImgMediaCard","CardActionArea","submit","icon","AuthLoginTest","loginWithRedirect","backgroundImage","backgroundRepeat","backgroundSize","backgroundPosition","paper","flexDirection","SignInSide","first_name","setFirstName","last_name","setLastName","member","setMember","submitHandler","values","firstName","lastName","Grid","xs","sm","md","elevation","square","Avatar","initialValues","validationSchema","Yup","max","min","onSubmit","setErrors","setStatus","setSubmitting","errors","touched","handleChange","handleBlur","handleSubmit","isSubmitting","noValidate","input","onBlur","Boolean","helperText","ButtonGroup","size","domain","process","REACT_APP_AUTH0_DOMAIN","clientId","REACT_APP_AUTH0_CLIENT_ID","App","redirectUri","window","location","origin","path","Quotes","Episodes","CardUser","LoginFullScreen","errorLink","onError","graphqlErrors","networkError","link","from","HttpLink","uri","client","ApolloClient","cache","InMemoryCache","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.27cd05e3.chunk.js","sourcesContent":["import React, { useContext, createContext, useState } from 'react';\n\nconst LoginContext = createContext({\n  isAuth: true,\n  email: '',\n  name: '',\n  login: () => {},\n  setName: () => {},\n  setEmail: () => {},\n});\n\nexport const LoginContextProvider = (props) => {\n  const [isAuthenticated, setIsAuthenticated] = useState(true);\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const loginHandler = () => {\n    setIsAuthenticated(!isAuthenticated);\n  };\n  const nameHandler = (personName) => {\n    setName(personName);\n  };\n  const emailHandler = (email) => {\n    setEmail(email);\n  };\n\n  return (\n    <LoginContext.Provider\n      value={{\n        login: loginHandler,\n        setName: nameHandler,\n        name: name,\n        isAuth: isAuthenticated,\n        email: email,\n        setEmail: emailHandler,\n      }}\n    >\n      {props.children}\n    </LoginContext.Provider>\n  );\n};\n\nexport const useLoginContext = () => useContext(LoginContext);\n","import React from 'react';\nimport { useAuth0 } from '@auth0/auth0-react';\nimport { Button } from '@material-ui/core';\nimport { NavLink } from 'react-router-dom';\n\nconst AuthLogoutTest = () => {\n  const { logout } = useAuth0();\n\n  return (\n    <NavLink to='/login'>\n      <Button\n        style={{\n          color: 'white',\n          backgroundColor: 'black',\n          marginRight: '1rem',\n        }}\n        variant='contained'\n        onClick={() => logout()}\n      >\n        Logout\n      </Button>\n    </NavLink>\n  );\n};\n\nexport default AuthLogoutTest;\n","import React, { useState } from 'react';\nimport { useLoginContext } from '../contexts/LoginContext';\nimport './MenuAppBar.css';\nimport {\n  Drawer,\n  List,\n  ListItem,\n  Divider,\n  Toolbar,\n  Button,\n  IconButton,\n  AppBar,\n  fade,\n  makeStyles,\n} from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { NavLink } from 'react-router-dom';\nimport { useAuth0 } from '@auth0/auth0-react';\nimport AuthLogoutTest from './AuthLogoutTest';\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    height: '5rem',\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    color: 'white',\n\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(3),\n      width: 'auto',\n    },\n  },\n\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: '20ch',\n    },\n  },\n  sectionDesktop: {\n    display: 'none',\n    [theme.breakpoints.up('md')]: {\n      display: 'flex',\n    },\n  },\n  sectionMobile: {\n    display: 'flex',\n    [theme.breakpoints.up('md')]: {\n      display: 'none',\n    },\n  },\n  navLinks: {\n    color: '#fff',\n    textDecoration: 'none',\n    fontSize: '20px',\n    // justifyContent: 'end',\n    margin: '1rem',\n    alignItems: 'center',\n    transition: 'all 0.3s',\n\n    '&:hover': {\n      color: '#7ac9d7',\n      textDecoration: 'underline',\n    },\n  },\n  notActive: {\n    marginRight: '1rem',\n    color: 'gray',\n    fontSize: '20px',\n    textDecoration: 'line-through',\n    cursor: 'not-allowed',\n  },\n}));\n\nexport default function PrimarySearchAppBar({ getQuery, props }) {\n  const classes = useStyles();\n  const authContext = useLoginContext();\n  const { user, isAuthenticated } = useAuth0();\n  const [drawerOpen, setDrawerOpen] = useState(false);\n\n  const handleDrawerToggle = () => {\n    setDrawerOpen(!drawerOpen);\n  };\n\n  const alertMessage = () => {\n    alert('sign up to view pages');\n  };\n\n  return (\n    <div className={classes.appBar}>\n      <AppBar\n        style={{\n          background: 'transparent',\n          boxShadow: 'none',\n          // backgroundColor: 'rgba(100, 100, 100, 0.4)',\n        }}\n      >\n        <Toolbar className={classes.appBar}>\n          <IconButton edge='start' color='inherit' aria-label='menu' onClick={handleDrawerToggle}>\n            <MenuIcon />\n          </IconButton>\n          <Drawer open={drawerOpen} onClose={handleDrawerToggle} className='drawer'>\n            <h3 className='drawer-header'>Breaking Bad Application</h3>\n            <Divider />\n            <List className='color'>\n              {authContext.isAuth || isAuthenticated ? (\n                <>\n                  <ListItem>\n                    <NavLink\n                      to='/characters'\n                      className={classes.navLinks}\n                      onClick={handleDrawerToggle}\n                      style={{\n                        display: 'block',\n                        textAlign: 'center',\n                        width: '100%',\n                      }}\n                    >\n                      Characters\n                    </NavLink>\n                  </ListItem>\n                  <ListItem>\n                    <NavLink\n                      to='/quotes'\n                      onClick={handleDrawerToggle}\n                      className={classes.navLinks}\n                      style={{\n                        display: 'block',\n                        textAlign: 'center',\n                        width: '100%',\n                      }}\n                    >\n                      Quotes\n                    </NavLink>\n                  </ListItem>\n\n                  <ListItem>\n                    <NavLink\n                      to='/episodes'\n                      className={classes.navLinks}\n                      onClick={handleDrawerToggle}\n                      style={{\n                        display: 'block',\n                        textAlign: 'center',\n                        width: '100%',\n                      }}\n                    >\n                      Episodes\n                    </NavLink>\n                  </ListItem>\n                  <ListItem>\n                    <NavLink\n                      to='/products'\n                      className={classes.navLinks}\n                      onClick={handleDrawerToggle}\n                      style={{\n                        display: 'block',\n                        textAlign: 'center',\n                        width: '100%',\n                      }}\n                    >\n                      Products\n                    </NavLink>\n                  </ListItem>\n                </>\n              ) : (\n                <ListItem\n                  style={{\n                    display: 'block',\n                    textAlign: 'center',\n                    width: '100%',\n                  }}\n                >\n                  Login First\n                </ListItem>\n              )}\n            </List>\n          </Drawer>\n          {!authContext.isAuth && !isAuthenticated ? (\n            <>\n              <div>\n                <NavLink className={classes.notActive} to='#' onClick={alertMessage}>\n                  Characters\n                </NavLink>\n                <NavLink className={classes.notActive} to='#' onClick={alertMessage}>\n                  Quotes\n                </NavLink>\n                <NavLink className={classes.notActive} to='#' onClick={alertMessage}>\n                  Episodes\n                </NavLink>\n                <NavLink className={classes.notActive} to='#' onClick={alertMessage}>\n                  Products\n                </NavLink>\n              </div>\n            </>\n          ) : (\n            <div>\n              <NavLink className={classes.navLinks} to='/characters'>\n                Characters\n              </NavLink>\n              <NavLink className={classes.navLinks} to='/quotes'>\n                Quotes\n              </NavLink>\n              <NavLink className={classes.navLinks} to='/episodes'>\n                Episodes Table\n              </NavLink>\n              <NavLink className={classes.navLinks} to='/products'>\n                Products\n              </NavLink>\n            </div>\n          )}\n\n          <div className={classes.grow} />\n          <div className={classes.sectionDesktop}>\n            <IconButton\n              edge='end'\n              aria-label='account of current user'\n              aria-haspopup='true'\n              color='inherit'\n            ></IconButton>\n          </div>\n\n          <NavLink className={classes.navLinks} to='/'>\n            {!isAuthenticated ? (\n              <>\n                <Button\n                  style={{\n                    color: 'white',\n                    backgroundColor: 'black',\n                    marginRight: '1rem',\n                  }}\n                >\n                  {' '}\n                  Sign UP{' '}\n                </Button>\n              </>\n            ) : (\n              <>\n                <p>\n                  <AuthLogoutTest onClick={() => isAuthenticated.logout()} />\n                  {user.name} <img className={'profile-pic'} src={user.picture} alt={user.name}></img>{' '}\n                </p>\n              </>\n            )}\n            {!authContext.isAuth ? (\n              <Button></Button>\n            ) : (\n              <>\n                <Button\n                  style={{\n                    color: 'white',\n                    backgroundColor: 'black',\n                    marginRight: '1rem',\n                  }}\n                  onClick={() => authContext.login()}\n                >\n                  Logout\n                </Button>\n                <img\n                  className={'profile-pic'}\n                  src={'https://www.pngitem.com/pimgs/m/79-797310_breaking-bad-heisenberg-logo-hd-png-download.png'}\n                  alt={'alt'}\n                ></img>\n              </>\n            )}\n          </NavLink>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n","import React, { useContext, createContext, useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst CharacterContext = createContext({\n  characters: [],\n});\n\nexport const CharacterContextProvider = (props) => {\n  const [characters, setCharacters] = useState([]);\n\n  // const url = 'https://www.breakingbadapi.com/api/characters';\n  const url = 'https://immense-island-84831.herokuapp.com/character';\n  useEffect(() => {\n    const getCharacters = async () => {\n      try {\n        const response = await axios.get(url);\n        console.log(response.data);\n        setCharacters(response.data);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    getCharacters();\n  }, []);\n\n  return <CharacterContext.Provider value={{ characters }}>{props.children}</CharacterContext.Provider>;\n};\n\nexport const useCharacterContext = () => useContext(CharacterContext);\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Slide from '@material-ui/core/Slide';\nimport './Quote.css';\nimport { useCharacterContext } from '../contexts/CharacterContext';\n\nexport default function Quote() {\n  const [checked, setChecked] = React.useState(false);\n  const handleChange = () => {\n    setChecked((prev) => !prev);\n  };\n  const [quotes, setQuotes] = useState([]);\n  const [quotechange, SetQuotechange] = useState('something');\n\n  const style = {\n    color: 'white',\n    fontSize: '1.5rem',\n    minWidth: '75%',\n    maxWidth: '75%',\n    position: 'relative',\n    padding: '1rem',\n    zIndex: '1',\n    backdropFilter: 'blur(10px)',\n    backgroundColor: 'rgba(120, 120, 120, 0.4)',\n  };\n  useEffect(() => {\n    const fetchItems = async () => {\n      const result = await axios(`https://www.breakingbadapi.com/api/quote/random?author`);\n      setQuotes(result.data);\n      console.log(result.data);\n    };\n    fetchItems();\n  }, [quotechange]);\n  const getNewQuote = () => {\n    SetQuotechange(quotes);\n    handleChange(setChecked());\n  };\n  const items = useCharacterContext();\n\n  return quotes.map((item) => {\n    const author = item.author;\n\n    const image = items.characters.filter((person) => {\n      return person.name === author || person.nickname === author;\n    });\n    const photo = image.map((person) => person.image);\n\n    return (\n      <div className='quoteDiv' key={item.quote_id} style={style}>\n        <button className='btn' onClick={getNewQuote}>\n          New quote\n        </button>\n        <br></br>\n        <div className='bubble' style={style}>\n          <em className='italics'>\n            <h3>\n              <strong></strong> \"{item.quote}\"\n            </h3>\n          </em>\n        </div>\n\n        <p className='flex'>\n          {image.length ? (\n            <>\n              <Slide direction='left' in={checked} mountOnEnter unmountOnExit>\n                <img alt={photo.id} className='img' src={photo}></img>\n              </Slide>\n            </>\n          ) : null}\n          -{item.author}, {item.series}\n        </p>\n      </div>\n    );\n  });\n}\n","import React, { useContext, createContext, useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst EpisodeContext = createContext({\n  episodes: [],\n});\n\nexport const EpisodeContextProvider = (props) => {\n  const [episodes, setEpisodes] = useState([]);\n\n  const url = 'https://immense-island-84831.herokuapp.com/episode';\n  useEffect(() => {\n    const getCharacters = async () => {\n      try {\n        const response = await axios.get(url);\n        setEpisodes(response.data);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    getCharacters();\n  }, []);\n\n  return (\n    <EpisodeContext.Provider value={{ episodes }}>\n      {props.children}\n    </EpisodeContext.Provider>\n  );\n};\n\nexport const useEpisodeContext = () => useContext(EpisodeContext);\n","import React from 'react';\nimport { makeStyles, fade } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport { useEpisodeContext } from '../contexts/EpisodeContext';\nimport { Typography } from '@material-ui/core';\n\nconst columns = [\n  { id: 'title', label: 'Title', minWidth: 170, text: 'Episode Title - ' },\n  { id: 'season', label: 'Season', minWidth: 100, text: 'Season #' },\n  { id: 'episode', label: 'Episode Number', minWidth: 100, text: 'Episode' },\n  {\n    id: 'air_date',\n    label: 'Original Air Date',\n    minWidth: 170,\n    align: 'right',\n    text: 'Aired on: ',\n  },\n  {\n    id: 'characters',\n    label: 'Appearances',\n    minWidth: 170,\n    align: 'right',\n    format: (value) => value.join(', \\n'),\n  },\n];\n\nfunction createData(title, season, number, date, appears) {\n  return { title, season, number, date, appears };\n}\n\nconst useStyles = makeStyles({\n  root: {\n    width: '80%',\n    position: 'relative',\n    zIndex: '1',\n    backdropFilter: 'blur(40px)',\n    backgroundColor: 'rgba(120, 120, 120, 0.6)',\n  },\n  container: {\n    maxHeight: 600,\n  },\n  table: {\n    scrollbar: '#F5f5f5',\n    minWidth: 650,\n    backgroundColor: 'rgba(120, 120, 120, 0.6)',\n  },\n  header: {\n    fontSize: '3rem',\n    padding: '1.5rem',\n    color: '#222',\n    textAlign: 'Center',\n    textDecoration: 'underline',\n    backdropFilter: 'blur(40px)',\n    backgroundColor: 'rgba(120, 120, 120, 0.6)',\n  },\n  row: {\n    '&:hover': {\n      backgroundColor: fade('#333', 0.25),\n    },\n  },\n});\n\nexport default function StickyHeadTable() {\n  const classes = useStyles();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const episodeContext = useEpisodeContext();\n  const allEpisodes = episodeContext.episodes;\n  const titles = allEpisodes.map((episode) => {\n    return episode;\n  });\n  let rows = [createData(titles)];\n  console.log(titles);\n  console.log(rows[0].title);\n  rows = rows[0].title;\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  return (\n    <Paper className={classes.root}>\n      <TableContainer className={classes.container}>\n        <Typography className={classes.header}>\n          Full Breaking Bad Episode List\n        </Typography>\n        <Table stickyHeader aria-label='sticky table' className={classes.table}>\n          <TableHead>\n            <TableRow className={classes.table}>\n              {columns.map((column) => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n              .map((row) => {\n                return (\n                  <TableRow\n                    hover\n                    role='checkbox'\n                    tabIndex={-1}\n                    key={row.episode_id}\n                  >\n                    {columns.map((column) => {\n                      const value = row[column.id];\n                      return (\n                        <TableCell key={column.id} align={column.align}>\n                          {column.text}\n                          {column.format && typeof value === 'number'\n                            ? column.format(value)\n                            : value}\n                        </TableCell>\n                      );\n                    })}\n                  </TableRow>\n                );\n              })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <TablePagination\n        rowsPerPage={rowsPerPage}\n        rowsPerPageOptions={[10, 25, 50, 75]}\n        component='div'\n        count={rows.length}\n        page={page}\n        onChangePage={handleChangePage}\n        onChangeRowsPerPage={handleChangeRowsPerPage}\n      />\n    </Paper>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport clsx from 'clsx';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\n// import SearchIcon from '@material-ui/icons/Search';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport CloseIcon from '@material-ui/icons/Close';\n\nimport {\n  Card,\n  CardHeader,\n  CardMedia,\n  CardContent,\n  CardActions,\n  Collapse,\n  IconButton,\n  Typography,\n  makeStyles,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n  DialogActions,\n  TextField,\n  Button,\n  Slide,\n  ListItem,\n  AppBar,\n  Toolbar,\n  List,\n  Divider,\n} from '@material-ui/core';\nimport './Card.css';\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction='up' ref={ref} {...props} />;\n});\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: 200,\n    minWidth: 200,\n    height: '100%',\n    margin: '10px',\n    borderRight: '3px solid #999',\n    borderBottom: '3px solid #999',\n    padding: '3em',\n    borderRadius: '1rem',\n    position: 'relative',\n    zIndex: '1',\n    backdropFilter: 'blur(40px)',\n    backgroundColor: 'rgba(195, 195, 195, 0.621)',\n    display: 'flex',\n    justifyContent: 'center',\n    flexWrap: 'wrap',\n    // color: 'white',\n  },\n  appBar: {\n    position: 'relative',\n  },\n  title2: {\n    marginLeft: theme.spacing(2),\n    flex: 1,\n  },\n\n  media: {\n    width: '100%',\n    height: '150px',\n    paddingTop: '56.25%',\n    backdropFilter: 'blur(40px)',\n    borderRadius: '1rem',\n    position: 'relative',\n  },\n  clicked: {\n    color: 'red',\n  },\n\n  expand: {\n    maxWidth: 200,\n    transform: 'rotate(0deg)',\n    marginLeft: 'auto',\n    color: 'white',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)',\n  },\n  avatar: {\n    width: '100%',\n    padding: '2px',\n    margin: '5px',\n    borderRadius: '50%',\n  },\n  form: {\n    width: '100vw',\n    fontSize: '3rem',\n    backgroundColor: 'rgba(195, 195, 195, 0.621)',\n    textAlign: 'center',\n  },\n  text: {\n    color: 'white',\n  },\n}));\n\nconst ListCard = () => {\n  const classes = useStyles();\n  const [expanded, setExpanded] = useState({});\n  const [openDialog, setOpenDialog] = useState(false);\n  const [openEditDialog, setOpenEditDialog] = useState(false);\n  const [characters, setCharacters] = useState([]);\n  const [currentCharacter, setCurrentCharacter] = useState('');\n  const [newName, setNewName] = useState(null);\n  const [newNickName, setNewNickName] = useState(null);\n  const [searchTerm, setSearchTerm] = useState(null);\n  const [open, setOpen] = React.useState(false);\n  const [postData, setPostData] = useState({ image: '', nickname: '', name: '' });\n  const url = `https://immense-island-84831.herokuapp.com/character`;\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const updateField = (e) => {\n    setPostData({\n      ...postData,\n      [e.target.id]: e.target.value,\n      occupation: ['Actor'],\n      image: 'https://picsum.photos/200/300',\n      status: 'Alive',\n      char_id: 0,\n    });\n  };\n  const handleClose = async () => {\n    setOpen(false);\n    postNewCharacter();\n    // console.log(postData)\n  };\n  const postNewCharacter = async () => {\n    console.log(postData);\n    try {\n      await axios.post(`${url}/`, {\n        name: postData.name,\n        image: postData.image,\n        nickname: postData.nickname,\n        occupation: postData.occupation,\n        status: postData.status,\n        portrayed: postData.portrayed,\n        char_id: postData.char_id,\n      });\n    } catch (error) {\n      console.error(error);\n    }\n    getCharacters();\n  };\n\n  const getCharacters = async () => {\n    try {\n      const response = await axios.get(`${url}`);\n      const sorted = response.data.sort((a, b) => a.char_id - b.char_id);\n      setCharacters(sorted);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getCharacters();\n  }, []);\n\n  const handleClickDeleteOpen = async (item) => {\n    await setCurrentCharacter(item.item);\n    // console.log(\"mongoID to delete from db\", item.item._id)\n    setOpenDialog(!openDialog);\n  };\n  const handleClickEditOpen = async (item) => {\n    await setCurrentCharacter(item.item);\n    setOpenEditDialog(!openEditDialog);\n  };\n  const closeDialog = () => {\n    setOpenDialog(!openDialog);\n  };\n  const closeEditDialog = () => {\n    setOpenEditDialog(!openEditDialog);\n  };\n  const deleteFromDB = async () => {\n    setOpenDialog(!openDialog);\n    try {\n      await axios.delete(`${url}`, {\n        data: {\n          productID: currentCharacter._id,\n        },\n      });\n      getCharacters();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const editInfoInDB = async () => {\n    closeEditDialog();\n    console.log(newName);\n    console.log(currentCharacter);\n    if (newName) {\n      try {\n        await axios.put(`${url}/update-name`, {\n          characterID: currentCharacter._id,\n          name: newName,\n        });\n        setNewName('');\n        getCharacters();\n      } catch (error) {\n        console.error(error);\n      }\n    }\n    if (newNickName) {\n      try {\n        await axios.put(`${url}/update-nick-name`, {\n          characterID: currentCharacter._id,\n          nickname: newNickName,\n        });\n        setNewName('');\n        getCharacters();\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  };\n  const handleExpandClick = (id) => {\n    setExpanded({ ...expanded, [id]: !expanded[id] });\n  };\n  const handleSeach = async () => {\n    console.log(searchTerm);\n    if (!searchTerm) {\n      getCharacters();\n    } else {\n      try {\n        const response = await axios.get(`${url}/search?term=${searchTerm}`);\n        const sorted = response.data.sort((a, b) => a.char_id - b.char_id);\n        setCharacters(sorted);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  };\n\n  return (\n    <>\n      <div className={classes.form}>\n        <TextField\n          className={classes.text}\n          placeholder='Search'\n          onChange={(e) => {\n            setSearchTerm(e.target.value);\n            handleSeach();\n          }}\n        />\n        {/* <IconButton onClick={() => handleSeach()} aria-label='search'>\n          <SearchIcon />\n        </IconButton> */}\n        <IconButton onClick={handleClickOpen} aria-label='add-character'>\n          <AddCircleIcon />\n        </IconButton>\n      </div>\n      {characters.map((item) => {\n        return (\n          <Card key={item._id} className={classes.root}>\n            <CardHeader\n              action={\n                <IconButton aria-label='settings'>\n                  <MoreVertIcon />\n                </IconButton>\n              }\n              onClick={() => handleClickEditOpen({ item })}\n              title={classes.title}\n              subheader={item.name}\n            />\n            <CardMedia className={classes.media} image={item.image} title={item.name} />\n            <CardContent>\n              <Typography variant='body2' component='p'>\n                <strong>Nick Name: </strong>\n                {item.nickname}\n              </Typography>\n            </CardContent>\n            <CardActions>\n              <IconButton aria-label='delete' onClick={() => handleClickDeleteOpen({ item })}>\n                <DeleteIcon />\n              </IconButton>\n              <IconButton aria-label='Edit' onClick={() => handleClickEditOpen({ item })}>\n                <EditIcon />\n              </IconButton>\n              <IconButton\n                className={clsx(classes.expand[item._id], {\n                  [classes.expandOpen]: expanded[item._id],\n                })}\n                onClick={() => handleExpandClick(item._id)}\n                aria-expanded={expanded}\n                aria-label='show more'\n              >\n                <ExpandMoreIcon />\n              </IconButton>\n            </CardActions>\n            <Collapse in={expanded[item._id]} timeout='auto' unmountOnExit>\n              <CardContent>\n                <Typography paragraph>\n                  <strong>INFO:</strong>\n                </Typography>\n\n                <Typography paragraph>\n                  <strong>Occupation: </strong>\n                  {item.occupation.join(', ')}\n                </Typography>\n                <Typography paragraph>\n                  <strong>Portrayed by : </strong>\n                  {item.portrayed}\n                </Typography>\n                <Typography paragraph>\n                  <strong>Living Status: </strong>\n                  {item.status}\n                </Typography>\n              </CardContent>\n            </Collapse>\n          </Card>\n        );\n      })}\n      {/* Delete Character Dialog */}\n      <Dialog open={openDialog} onClose={closeDialog}>\n        <DialogTitle>Delete</DialogTitle>\n        <DialogContentText>Are you sure you want to delete {currentCharacter.nickname}?</DialogContentText>\n        <DialogActions>\n          <Button onClick={closeDialog}>Cancel</Button>\n          <Button onClick={deleteFromDB}>Delete Character</Button>\n        </DialogActions>\n      </Dialog>\n      {/* Edit Name dialog */}\n      <Dialog open={openEditDialog} onClose={closeEditDialog} aria-labelledby='form-dialog-title'>\n        <DialogTitle id='form-dialog-title'>Edit: {currentCharacter.name}</DialogTitle>\n        <DialogContent>\n          <DialogContentText>Current Name: {currentCharacter.name}</DialogContentText>\n          <DialogContentText>Current Nick-Name: {currentCharacter.nickname}</DialogContentText>\n          <TextField\n            autoFocus\n            margin='dense'\n            id='name'\n            label='New Name'\n            type='text'\n            fullWidth\n            onChange={(e) => {\n              setNewName(e.target.value);\n            }}\n          />\n          <TextField\n            autoFocus\n            margin='dense'\n            id='nick-name'\n            label='New Nick Name'\n            type='text'\n            fullWidth\n            onChange={(e) => {\n              setNewNickName(e.target.value);\n            }}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={closeEditDialog} color='primary'>\n            Cancel\n          </Button>\n          <Button onClick={editInfoInDB} color='primary'>\n            Submit Changes\n          </Button>\n        </DialogActions>\n      </Dialog>\n      {/* End Edit Name Dialog */}\n      {/* post diaglog screen */}\n      <div>\n        <Dialog fullScreen open={open} onClose={handleClose} TransitionComponent={Transition}>\n          <AppBar className={classes.appBar}>\n            <Toolbar>\n              <IconButton edge='start' color='inherit' onClick={handleClose} aria-label='close'>\n                <CloseIcon />\n              </IconButton>\n              <Typography variant='h6' className={classes.title2}>\n                Add A New Character\n              </Typography>\n              <Button autoFocus color='inherit' onClick={handleClose}>\n                save\n              </Button>\n            </Toolbar>\n          </AppBar>\n          <List>\n            <ListItem button>\n              <TextField\n                autoFocus\n                required\n                autoComplete='off'\n                margin='dense'\n                id='name'\n                label='Character Name'\n                type='text'\n                fullWidth\n                onChange={updateField}\n              />\n            </ListItem>\n            <ListItem button>\n              <TextField\n                required\n                autoComplete='off'\n                margin='dense'\n                id='nickname'\n                label='Character Nick-Name'\n                type='text'\n                fullWidth\n                onChange={updateField}\n              />\n            </ListItem>\n            <ListItem button>\n              <TextField\n                required\n                autoComplete='off'\n                margin='dense'\n                id='portrayed'\n                label='Portrayed By: '\n                type='Text'\n                fullWidth\n                onChange={updateField}\n              />\n            </ListItem>\n            <Divider />\n          </List>\n        </Dialog>\n      </div>\n    </>\n  );\n};\n\nexport default ListCard;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Collapse from '@material-ui/core/Collapse';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport './Card.css';\nimport { useAuth0 } from '@auth0/auth0-react';\nimport AllCards from './Card';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: 200,\n    minWidth: 200,\n    height: '100%',\n    margin: '10px',\n    borderRight: '3px solid #999',\n    borderBottom: '3px solid #999',\n    padding: '3em',\n    borderRadius: '1rem',\n    position: 'relative',\n    zIndex: '1',\n    backdropFilter: 'blur(40px)',\n    backgroundColor: 'gray',\n  },\n  media: {\n    width: '100%',\n    height: '150px',\n    paddingTop: '56.25%',\n    backdropFilter: 'blur(40px)',\n    borderRadius: '1rem',\n\n    position: 'relative',\n  },\n  clicked: {\n    color: 'red',\n  },\n\n  expand: {\n    maxWidth: 200,\n    transform: 'rotate(0deg)',\n    marginLeft: 'auto',\n    color: '#fff',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)',\n  },\n  avatar: {\n    width: '100%',\n    padding: '2px',\n    margin: '5px',\n    borderRadius: '50%',\n    backgroundColor: 'light-gray',\n  },\n}));\n\nexport default function ListCard() {\n  const classes = useStyles();\n  const [expanded, setExpanded] = React.useState(false);\n\n  const handleExpandClick = (id) => {\n    setExpanded(!expanded);\n  };\n\n  const { user, isAuthenticated } = useAuth0();\n\n  return isAuthenticated ? (\n    <>\n      <Card key={user.family_name} className={classes.root}>\n        <CardHeader\n          action={\n            <IconButton aria-label='settings'>\n              <MoreVertIcon />\n            </IconButton>\n          }\n          title={classes.title}\n          subheader={user.name}\n        />\n        <CardMedia\n          className={classes.media}\n          image={user.picture}\n          title='profile'\n        />\n        <CardContent>\n          <Typography variant='body2' color='textSecondary' component='p'>\n            <strong>Nick Name: </strong>\n            {user.nickname}\n          </Typography>\n        </CardContent>\n        <CardActions disableSpacing>\n          <IconButton aria-label='add to favorites'>\n            <FavoriteIcon />\n          </IconButton>\n          <IconButton aria-label='share'>\n            <ShareIcon />\n          </IconButton>\n          <IconButton\n            className={clsx(classes.expand, {\n              [classes.expandOpen]: expanded,\n            })}\n            onClick={() => handleExpandClick(user.name)}\n            aria-expanded={expanded}\n            aria-label='show more'\n          >\n            <ExpandMoreIcon />\n          </IconButton>\n        </CardActions>\n        <Collapse in={expanded} timeout='auto' unmountOnExit>\n          <CardContent>\n            <Typography paragraph>\n              <strong>INFO:</strong>\n            </Typography>\n            <Typography paragraph>\n              <strong>Email: </strong>\n              {user.email}\n            </Typography>\n\n            <Typography paragraph>\n              <strong>Occupation: </strong>\n              Guest User\n            </Typography>\n            <Typography paragraph>\n              <strong>Portrayed by : </strong>\n              {user.given_name}\n            </Typography>\n            <Typography paragraph>\n              <strong>Living Status: </strong>\n              Alive\n            </Typography>\n          </CardContent>\n        </Collapse>\n      </Card>\n\n      <AllCards />\n    </>\n  ) : (\n    <AllCards />\n  );\n}\n","import React, { useState } from 'react';\n// import axios from 'axios';\nimport { useQuery, gql, useMutation } from '@apollo/client';\nimport {\n  Container,\n  makeStyles,\n  Typography,\n  Card,\n  CardMedia,\n  CardActions,\n  CardContent,\n  IconButton,\n  Box,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n  TextField,\n  ListItem,\n  List,\n  Slide,\n  DialogActions,\n  AppBar,\n  Toolbar,\n  Button,\n  Divider,\n} from '@material-ui/core';\nimport CloseIcon from '@material-ui/icons/Close';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction='up' ref={ref} {...props} />;\n});\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexWrap: 'wrap',\n  },\n  card: {\n    width: 340,\n    margin: 10,\n  },\n  content: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: '3rem',\n    marginTop: '3rem',\n  },\n  typeWidth: {\n    width: '100%',\n  },\n  media: {\n    borderRadius: '15px',\n  },\n  actions: {\n    justifyContent: 'space-between',\n    alignItems: 'baseline',\n  },\n\n  fullWidth: {\n    marginLeft: '20rem',\n    marginRight: '30rem',\n  },\n}));\n\nconst ALL_PRODUCTS = gql`\n  query ProductsAndCategories {\n    allProducts {\n      id\n      title\n      price\n      description\n      category\n      image\n    }\n    allCategories {\n      description\n    }\n  }\n`;\n\nconst UPDATE_PRODUCT = gql`\n  mutation updateProduct(\n    $id: Int!\n    $title: String!\n    $price: String!\n    $description: String!\n    $category: String!\n    $image: String!\n  ) {\n    updateProduct(\n      id: $id\n      data: { title: $title, price: $price, description: $description, category: $category, image: $image }\n    ) {\n      id\n    }\n  }\n`;\n// const CREATE_CATEGORY = gql`\n//   mutation createCategory($id: Int!, $productTitle: String!) {\n//     createCategory(id: $id, data: { productTitle: $productTitle, price: $price }) {\n//       id\n//     }\n//   }\n// `;\nconst CREATE_PRODUCT = gql`\n  mutation createProduct($title: String!, $price: String!, $description: String!, $category: String!, $image: String!) {\n    createProduct(\n      data: { title: $title, price: $price, description: $description, category: $category, image: $image }\n    ) {\n      id\n    }\n  }\n`;\nconst DELETE_PRODUCT = gql`\n  mutation deleteProduct($id: Int!) {\n    deleteProduct(id: $id) {\n      id\n    }\n  }\n`;\n\nconst ProductList = () => {\n  const classes = useStyles();\n  const [selectedProduct, setSelectedProduct] = useState({ title: '' });\n  const [title, setTitle] = useState('');\n  const [price, setPrice] = useState('');\n  const [description, setDescription] = useState('');\n  const [category, setCategory] = useState('');\n  const [image, setImage] = useState('');\n  const [editOpen, setEditOpen] = useState(false);\n  const [deleteOpen, setDeleteOpen] = useState(false);\n  const [open, setOpen] = React.useState(false);\n  const { loading, error, data } = useQuery(ALL_PRODUCTS);\n  const [updateProduct] = useMutation(UPDATE_PRODUCT);\n  const [deleteProduct] = useMutation(DELETE_PRODUCT);\n  // const [createCategory] = useMutation(CREATE_CATEGORY);\n  const [createProduct] = useMutation(CREATE_PRODUCT);\n  // const [createProduct] = useMutation(CREATE_PRODUCT);\n  // console.log(productList);\n  const handleDelete = async () => {\n    setDeleteOpen(false);\n    console.log(selectedProduct.id);\n    try {\n      deleteProduct({ variables: { id: selectedProduct.id } });\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClickEditOpen = (product) => {\n    console.log(product);\n    setSelectedProduct(product.product);\n    setEditOpen(true);\n  };\n  const handleClickDeleteOpen = (product) => {\n    setSelectedProduct(product.product);\n    setDeleteOpen(true);\n  };\n  // Add a new Product section\n  const handleClose = async () => {\n    setOpen(false);\n  };\n\n  //  end Add a new Product Section.\n  const handleCloseEdit = () => {\n    setEditOpen(false);\n  };\n  const handleUpdate = async () => {\n    console.log('hit handle update', title, description, price, category, image);\n    setEditOpen(false);\n\n    updateProduct({\n      variables: {\n        id: selectedProduct.id,\n        title: title,\n        description: description,\n        price: price,\n        category: category,\n        image: image,\n      },\n    });\n    // createCategory({\n    //   variables: {\n    //     id: selectedProduct.id,\n    //     description: category,\n    //   }\n    // })\n  };\n  const handleAddProduct = async () => {\n    console.log('hit handle update', title, description, price, category, image);\n    setOpen(false);\n    createProduct({\n      variables: {\n        title: title,\n        price: price,\n        description: description,\n        category: category,\n        image: image,\n      },\n    });\n  };\n\n  const handleCloseDelete = () => {\n    setDeleteOpen(false);\n  };\n  if (loading) {\n    return (\n      <Container className={classes.root}>\n        <Typography className={classes.messages}>Loading...</Typography>\n      </Container>\n    );\n  }\n\n  if (error) {\n    return <Typography className={classes.messages}>{`${error.message}`}</Typography>;\n  }\n  const productList = data.allProducts;\n  const categoryList = data.allCategories;\n\n  const filteredArr = categoryList.reduce((acc, current) => {\n    const x = acc.find((item) => item.description === current.description);\n    if (!x) {\n      return acc.concat([current]);\n    } else {\n      return acc;\n    }\n  }, []);\n  console.log(filteredArr);\n  return (\n    <>\n      <div className={classes.fullWidth}>\n        <IconButton onClick={handleClickOpen} aria-label='add-character'>\n          <AddCircleIcon />\n          <h1>+Add Product</h1>\n        </IconButton>\n\n        <div>\n          <label for='categories'>Find By Category:</label>\n          <select name='categories' id='categories'>\n            <option value=\"all-categories\">All Categories</option>\n            {filteredArr.map((category) => {\n              return <option value={category.description}>{category.description}</option>;\n            })}\n          </select>\n        </div>\n      </div>\n      <Container className={classes.root}>\n        {productList.map((product) => {\n          return (\n            <Card className={classes.card} key={product.id}>\n              <CardMedia\n                component='img'\n                height='300'\n                className={classes.media}\n                image={product.image}\n                title={product.title}\n              />\n              <CardActions className={classes.actions}>\n                <IconButton aria-label='edit' onClick={() => handleClickEditOpen({ product })}>\n                  <EditIcon />\n                </IconButton>\n                <IconButton aria-label='delete' onClick={() => handleClickDeleteOpen({ product })}>\n                  <DeleteIcon />\n                </IconButton>\n              </CardActions>\n              <CardContent>\n                <Typography gutterBottom variant='h5' component='h2'>\n                  {product.title}\n                </Typography>\n                <Box className={classes.content}>\n                  <Typography variant='h5' color='secondary'>\n                    Price: ${product.price}\n                  </Typography>\n                  <Typography variant='subtitle1' color='primary'>\n                    Dpt: {product.category}\n                  </Typography>\n                </Box>\n                <Box textAlign='center'>\n                  <Typography variant='h6' color='textSecondary'>\n                    Item Details:\n                  </Typography>\n                </Box>\n                <Box>\n                  <Typography variant='subtitle1' color='textSecondary'>\n                    {product.description}\n                  </Typography>\n                </Box>\n              </CardContent>\n            </Card>\n          );\n        })}\n      </Container>\n      <form>\n        <Dialog\n          fullWidth\n          maxWidth='lg'\n          open={editOpen}\n          className={classes.dialog}\n          onClose={handleCloseEdit}\n          aria-labelledby='edit-dialog-title'\n        >\n          <DialogTitle id='edit-dialog-title'>Product Edit Form</DialogTitle>\n          <DialogContent>\n            <DialogContentText>Edit A products Details And Save the Changes</DialogContentText>\n            <TextField\n              autoFocus\n              id='title'\n              name='title'\n              label='Product Title'\n              type='text'\n              fullWidth\n              placeholder={selectedProduct.title}\n              onChange={(e) => {\n                setTitle(e.target.value);\n              }}\n            />\n            <Box className={classes.content}>\n              <TextField\n                autoFocus\n                id='price'\n                name='price'\n                label='Enter Price Here'\n                type='text'\n                onChange={(e) => {\n                  setPrice(e.target.value);\n                }}\n              />\n            </Box>\n            <Box>\n              <TextField\n                autoFocus\n                name='price'\n                id='category'\n                label='Enter Category Here'\n                type='text'\n                // value={selectedProduct.category}\n                onChange={(e) => {\n                  setCategory(e.target.value);\n                }}\n              />\n            </Box>\n            <Box>\n              <TextField\n                autoFocus\n                id='description'\n                name='description'\n                label='product Description'\n                type='textarea'\n                fullWidth\n                onChange={(e) => {\n                  setDescription(e.target.value);\n                }}\n              />\n            </Box>\n            <Box>\n              <TextField\n                autoFocus\n                id='image'\n                name='image'\n                label='Enter Image URL'\n                type='textarea'\n                fullWidth\n                onChange={(e) => {\n                  setImage(e.target.value);\n                }}\n              />\n            </Box>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleCloseEdit} color='primary'>\n              Cancel\n            </Button>\n            <Button type='submit' color='primary' onClick={() => handleUpdate()}>\n              Save\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </form>\n      <Dialog open={deleteOpen} onClose={handleCloseDelete}>\n        <DialogTitle>Delete Product</DialogTitle>\n        <DialogContent>\n          <DialogContentText>Are you sure you want to delete this product?</DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleCloseDelete} color='primary'>\n            Cancel\n          </Button>\n          <Button onClick={handleDelete} color='primary'>\n            Delete\n          </Button>\n        </DialogActions>\n      </Dialog>\n      {/* post diaglog screen */}\n      <div>\n        <Dialog fullScreen open={open} onClose={handleClose} TransitionComponent={Transition}>\n          <AppBar className={classes.appBar}>\n            <Toolbar>\n              <IconButton edge='start' color='inherit' onClick={handleClose} aria-label='close'>\n                <CloseIcon />\n              </IconButton>\n              <Typography variant='h6' className={classes.title2}>\n                Add A New Product\n              </Typography>\n              <Button autoFocus color='inherit' onClick={() => handleAddProduct()}>\n                save\n              </Button>\n            </Toolbar>\n          </AppBar>\n          <br></br>\n          <br></br>\n          <br></br>\n          <br></br>\n          <List>\n            <ListItem button>\n              <TextField\n                autoFocus\n                required\n                autoComplete='off'\n                margin='dense'\n                id='title'\n                label='Product Title'\n                type='text'\n                fullWidth\n                onChange={(e) => {\n                  setTitle(e.target.value);\n                }}\n              />\n            </ListItem>\n            <ListItem button>\n              <TextField\n                required\n                autoComplete='off'\n                margin='dense'\n                id='price'\n                label='Price'\n                type='text'\n                fullWidth\n                onChange={(e) => {\n                  setPrice(e.target.value);\n                }}\n              />\n            </ListItem>\n            <ListItem button>\n              <TextField\n                required\n                autoComplete='off'\n                margin='dense'\n                id='category'\n                label='category'\n                type='Text'\n                fullWidth\n                onChange={(e) => {\n                  setCategory(e.target.value);\n                }}\n              />\n            </ListItem>\n            <ListItem button>\n              <TextField\n                required\n                autoComplete='off'\n                margin='dense'\n                id='description'\n                label='description'\n                type='Text'\n                fullWidth\n                onChange={(e) => {\n                  setDescription(e.target.value);\n                }}\n              />\n            </ListItem>\n            <ListItem button>\n              <TextField\n                required\n                autoComplete='off'\n                margin='dense'\n                id='image'\n                label='imageURL'\n                type='Text'\n                fullWidth\n                onChange={(e) => {\n                  setImage(e.target.value);\n                }}\n              />\n            </ListItem>\n\n            <Divider />\n          </List>\n        </Dialog>\n      </div>\n    </>\n  );\n};\n\nexport default ProductList;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport { useAuth0 } from '@auth0/auth0-react';\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 345,\n    padding: '2rem',\n    zIndex: '1',\n    backdropFilter: 'blur(10px)',\n    backgroundColor: 'rgba(120, 120, 120, 0.4)',\n  },\n  profile: {\n    height: 100,\n    width: 100,\n    borderRadius: '50%',\n    margin: '0,auto',\n  },\n});\n\nexport default function ImgMediaCard() {\n  const classes = useStyles();\n  const { user, isAuthenticated } = useAuth0();\n\n  return (\n    isAuthenticated && (\n      <>\n        <Card className={classes.root}>\n          <CardActionArea>\n            <CardMedia\n              className={classes.profile}\n              component='img'\n              alt={user.name}\n              height='140'\n              width='140'\n              image={user.picture}\n              title={user.name}\n            />\n            <CardContent>\n              <Typography gutterBottom variant='h5' component='h2'>\n                {user.name}\n              </Typography>\n              <Typography variant='body2' color='textSecondary' component='p'>\n                First Name: {user.given_name}\n              </Typography>\n              <Typography variant='body2' color='textSecondary' component='p'>\n                Last Name: {user.family_name}\n              </Typography>\n            </CardContent>\n          </CardActionArea>\n          <CardActions>\n            <Typography variant='body2' color='textSecondary' component='p'>\n              Email Address: {user.email}\n            </Typography>\n          </CardActions>\n          {console.log(user)}\n        </Card>\n      </>\n    )\n  );\n}\n","import React from 'react';\nimport { useAuth0 } from '@auth0/auth0-react';\nimport { Button } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n    backgroundColor: '#7AC9D7',\n    color: 'white',\n  },\n  icon: {\n    color: 'white',\n  },\n}));\nconst AuthLoginTest = () => {\n  const classes = useStyles();\n  const { loginWithRedirect, isAuthenticated } = useAuth0();\n\n  return (\n    !isAuthenticated && (\n      <Button onClick={() => loginWithRedirect()} fullWidth variant='contained' className={classes.submit}>\n        Google Login\n      </Button>\n    )\n  );\n};\n\nexport default AuthLoginTest;\n","import React, { useState } from 'react';\nimport { useLoginContext } from '../contexts/LoginContext';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport './Login.css';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport PersonalCard from './PersonalCard';\nimport AuthLoginTest from './AuthLoginTest';\nimport { useAuth0 } from '@auth0/auth0-react';\nimport { ButtonGroup } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '200px',\n    maxWidth: '75vw',\n    padding: '5rem',\n  },\n  image: {\n    backgroundImage:\n      'url(https://www.pngkit.com/png/full/364-3644816_related-wallpapers-los-pollos-hermanos-png.png)',\n    backgroundRepeat: 'no-repeat',\n    backdropFilter: 'blur(40px)',\n    backgroundColor: 'rgba(0, 0, 0, 0.1)',\n    backgroundSize: 'contain',\n    backgroundPosition: 'center',\n  },\n  paper: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    padding: '2rem',\n  },\n  text: {\n    color: '#444',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: '#018619',\n  },\n  form: {\n    width: '100%',\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n    backgroundColor: 'black',\n    color: 'white',\n  },\n  icon: {\n    color: 'white',\n  },\n}));\n\nexport default function SignInSide(props) {\n  const classes = useStyles();\n\n  const [first_name, setFirstName] = useState('');\n  const [last_name, setLastName] = useState('');\n  const [email, setEmail] = useState('');\n  const [member, setMember] = useState('');\n  const authContext = useLoginContext();\n  const { user, isAuthenticated } = useAuth0();\n\n  const submitHandler = (values) => {\n    setMember({\n      first_name: values.firstName,\n      last_name: values.lastName,\n      email: values.email,\n    });\n    authContext.login();\n    authContext.setName(values.firstName);\n    authContext.setEmail(values.email);\n  };\n\n  console.log(member, first_name, email, last_name);\n\n  return !authContext.isAuth && !isAuthenticated ? (\n    <Grid container component='main' className={classes.root}>\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n        <div className={classes.paper}>\n          <Avatar className={classes.avatar}>\n            <LockOutlinedIcon className={classes.icon} />\n          </Avatar>\n          <Typography component='h1' variant='h5' className={classes.text}>\n            Sign Up\n          </Typography>\n          <Formik\n            initialValues={{\n              email: '',\n              firstName: '',\n              lastName: '',\n              submit: null,\n            }}\n            validationSchema={Yup.object().shape({\n              email: Yup.string()\n                .email('Must be a Valid Email address')\n                .max(30)\n                .required('Email is Required'),\n              firstName: Yup.string()\n                .min(3, 'First Name Must be 3 characters or more')\n                .max(40, 'Name is too long')\n                .required('First Name is Required'),\n              lastName: Yup.string()\n                .min(3, 'Last Name Must be 3 characters or more')\n                .max(40, 'Name is too long')\n                .required('Last Name is Required'),\n            })}\n            onSubmit={(values, { setErrors, setStatus, setSubmitting }) => {\n              try {\n                console.log(values.email, values.firstName, values.lastName);\n                setFirstName(values.firstName);\n                setLastName(values.lastName);\n                setEmail(values.email);\n                submitHandler(values);\n                authContext.login();\n              } catch (err) {\n                console.error(err);\n              }\n            }}\n          >\n            {({\n              values,\n              errors,\n              touched,\n              handleChange,\n              handleBlur,\n              handleSubmit,\n              isSubmitting,\n            }) => (\n              <form\n                className={classes.form}\n                noValidate\n                autoComplete='off'\n                onSubmit={handleSubmit}\n              >\n                <TextField\n                  className={classes.input}\n                  variant='outlined'\n                  margin='normal'\n                  required\n                  fullWidth\n                  id='firstName'\n                  label='First Name'\n                  name='firstName'\n                  autoFocus\n                  value={values.firstName}\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  error={Boolean(touched.firstName && errors.firstName)}\n                  helperText={touched.firstName && errors.firstName}\n                />\n                <TextField\n                  variant='outlined'\n                  margin='normal'\n                  required\n                  fullWidth\n                  id='lastName'\n                  label='Last Name'\n                  name='lastName'\n                  value={values.lastName}\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  error={Boolean(touched.lastName && errors.lastName)}\n                  helperText={touched.lastName && errors.lastName}\n                />\n                <TextField\n                  variant='outlined'\n                  margin='normal'\n                  type='email'\n                  name='email'\n                  id='email'\n                  autoComplete='email'\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  value={values.email}\n                  error={Boolean(touched.email && errors.email)}\n                  helperText={touched.email && errors.email}\n                  required\n                  fullWidth\n                  label='Email Address'\n                />\n                <ButtonGroup size='large' fullWidth variant='text'>\n                  <Button\n                    type='submit'\n                    fullWidth\n                    variant='contained'\n                    className={classes.submit}\n                  >\n                    Sign-Up\n                  </Button>\n                  <AuthLoginTest\n                    type='submit'\n                    fullWidth\n                    variant='contained'\n                    className={classes.submit}\n                    onSubmit={(\n                      values,\n                      { setErrors, setStatus, setSubmitting }\n                    ) => {\n                      try {\n                        setFirstName(user.name);\n                        setEmail(user.email);\n                        submitHandler(values);\n                        authContext.login();\n                      } catch (err) {\n                        console.error(err);\n                      }\n                    }}\n                  ></AuthLoginTest>\n                </ButtonGroup>\n              </form>\n            )}\n          </Formik>\n        </div>\n      </Grid>\n    </Grid>\n  ) : (\n    isAuthenticated && <PersonalCard />\n  );\n}\n","import './App.css';\nimport React from 'react';\nimport MenuAppBar from './Components/MenuAppBar';\nimport Quotes from './Components/Quote';\nimport Episodes from './Components/Episodes';\nimport CardUser from './Components/CardUser';\nimport ProductList from './Components/ProductList';\nimport LoginFullScreen from './Components/LoginFullScreen';\nimport { Switch, Route } from 'react-router-dom';\nimport { CharacterContextProvider } from './contexts/CharacterContext';\nimport { LoginContextProvider } from './contexts/LoginContext';\nimport { EpisodeContextProvider } from './contexts/EpisodeContext';\nimport { Auth0Provider } from '@auth0/auth0-react';\n\nconst domain = process.env.REACT_APP_AUTH0_DOMAIN;\nconst clientId = process.env.REACT_APP_AUTH0_CLIENT_ID;\n\nconst App = () => {\n  return (\n    <Auth0Provider domain={domain} clientId={clientId} redirectUri={window.location.origin}>\n      <LoginContextProvider>\n        <CharacterContextProvider>\n          <EpisodeContextProvider>\n            <>\n              <MenuAppBar />\n              <div className='image'></div>\n              <div className='container'>\n                <Switch>\n                  <Route path='/quotes' component={Quotes} />\n                  <Route path='/episodes' component={Episodes} />\n                  <Route path='/characters' component={CardUser} />\n                  <Route path='/products' component={ProductList} />\n                  <Route path='/login' component={LoginFullScreen} />\n                  <Route path='/' component={LoginFullScreen} />\n                </Switch>\n              </div>\n            </>\n          </EpisodeContextProvider>\n        </CharacterContextProvider>\n      </LoginContextProvider>\n    </Auth0Provider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\nimport { ApolloClient, InMemoryCache, ApolloProvider, HttpLink, from } from '@apollo/client';\nimport { onError } from '@apollo/client/link/error';\n\nconst errorLink = onError(({ graphqlErrors, networkError }) => {\n  if (graphqlErrors) {\n    graphqlErrors.map(({ message, location, path }) => {\n      alert(`Graphql error ${message}`);\n\n    });\n  }\n});\nconst link = from([errorLink, new HttpLink({ uri: 'https://dockerapp-stage.herokuapp.com/' })]);\n\nconst client = new ApolloClient({\n  link: link,\n  cache: new InMemoryCache(),\n});\n// const client = new ApolloClient({\n//   uri: 'http://localhost:4000/graphql/',\n//   cache: new InMemoryCache(),\n// });\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <ApolloProvider client={client}>\n        <App />\n      </ApolloProvider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}